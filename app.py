# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'app_ui2.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets, QtPrintSupport
from dbconnection import *
import MySQLdb as mdb
import datetime
import decimal
from fpdf import FPDF


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(950, 550)
        MainWindow.setMinimumSize(QtCore.QSize(950, 550))
        MainWindow.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setMinimumSize(QtCore.QSize(950, 550))
        self.centralwidget.setObjectName("centralwidget")
        self.stackedWidget = QtWidgets.QStackedWidget(self.centralwidget)
        self.stackedWidget.setGeometry(QtCore.QRect(0, 0, 950, 550))
        self.stackedWidget.setMinimumSize(QtCore.QSize(950, 550))
        self.stackedWidget.setObjectName("stackedWidget")
        self.loginPage = QtWidgets.QWidget()
        self.loginPage.setMinimumSize(QtCore.QSize(950, 550))
        self.loginPage.setObjectName("loginPage")
        self.loginLeftFrame = QtWidgets.QFrame(self.loginPage)
        self.loginLeftFrame.setGeometry(QtCore.QRect(0, 0, 450, 581))
        self.loginLeftFrame.setMinimumSize(QtCore.QSize(400, 550))
        self.loginLeftFrame.setStyleSheet("background-color: rgb(102, 150, 200);")
        self.loginLeftFrame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.loginLeftFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.loginLeftFrame.setObjectName("loginLeftFrame")
        self.loginIntroLabel1 = QtWidgets.QLabel(self.loginLeftFrame)
        self.loginIntroLabel1.setGeometry(QtCore.QRect(80, 100, 271, 51))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.loginIntroLabel1.setFont(font)
        self.loginIntroLabel1.setStyleSheet("color: rgb(255, 255, 255)")
        self.loginIntroLabel1.setObjectName("loginIntroLabel1")
        self.loginIntroLabel2 = QtWidgets.QLabel(self.loginLeftFrame)
        self.loginIntroLabel2.setGeometry(QtCore.QRect(85, 150, 271, 31))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.loginIntroLabel2.setFont(font)
        self.loginIntroLabel2.setStyleSheet("color: rgb(255, 255, 255)")
        self.loginIntroLabel2.setObjectName("loginIntroLabel2")
        self.loginIntroLabel3 = QtWidgets.QLabel(self.loginLeftFrame)
        self.loginIntroLabel3.setGeometry(QtCore.QRect(80, 260, 311, 31))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.loginIntroLabel3.setFont(font)
        self.loginIntroLabel3.setStyleSheet("color: rgb(255, 255, 255)")
        self.loginIntroLabel3.setObjectName("loginIntroLabel3")
        self.loginIntroLabel4 = QtWidgets.QLabel(self.loginLeftFrame)
        self.loginIntroLabel4.setGeometry(QtCore.QRect(170, 290, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.loginIntroLabel4.setFont(font)
        self.loginIntroLabel4.setStyleSheet("color: rgb(255, 255, 255)")
        self.loginIntroLabel4.setObjectName("loginIntroLabel4")
        self.loginRightFrame = QtWidgets.QFrame(self.loginPage)
        self.loginRightFrame.setGeometry(QtCore.QRect(440, 0, 550, 551))
        self.loginRightFrame.setMinimumSize(QtCore.QSize(550, 550))
        self.loginRightFrame.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.loginRightFrame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.loginRightFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.loginRightFrame.setObjectName("loginRightFrame")
        self.userIcon = QtWidgets.QLabel(self.loginRightFrame)
        self.userIcon.setGeometry(QtCore.QRect(190, 70, 101, 91))
        self.userIcon.setText("")
        self.userIcon.setPixmap(QtGui.QPixmap("user_icon.png"))
        self.userIcon.setScaledContents(True)
        self.userIcon.setObjectName("userIcon")
        self.usernameField = QtWidgets.QLineEdit(self.loginRightFrame)
        self.usernameField.setGeometry(QtCore.QRect(130, 220, 231, 31))
        self.usernameField.setStyleSheet("border: 1px solid rgb(117, 117, 117);\n"
"border-radius: 2px;")
        self.usernameField.setText("")
        self.usernameField.setObjectName("usernameField")
        self.passwordField = QtWidgets.QLineEdit(self.loginRightFrame)
        self.passwordField.setGeometry(QtCore.QRect(130, 310, 231, 31))
        self.passwordField.setStyleSheet("border: 1px solid rgb(117, 117, 117);\n"
"border-radius: 2px;")
        self.passwordField.setObjectName("passwordField")
        self.usernameLabel = QtWidgets.QLabel(self.loginRightFrame)
        self.usernameLabel.setGeometry(QtCore.QRect(130, 190, 81, 19))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(8)
        self.usernameLabel.setFont(font)
        self.usernameLabel.setStyleSheet("color: rgb(117, 117, 117)")
        self.usernameLabel.setObjectName("usernameLabel")
        self.passwordLabel = QtWidgets.QLabel(self.loginRightFrame)
        self.passwordLabel.setGeometry(QtCore.QRect(130, 280, 81, 19))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(8)
        self.passwordLabel.setFont(font)
        self.passwordLabel.setStyleSheet("color: rgb(117, 117, 117)")
        self.passwordLabel.setObjectName("passwordLabel")
        self.loginButton = QtWidgets.QPushButton(self.loginRightFrame)
        self.loginButton.setGeometry(QtCore.QRect(130, 370, 231, 41))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setBold(True)
        font.setWeight(75)
        self.loginButton.setFont(font)
        self.loginButton.setStyleSheet("QPushButton#loginButton{\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: rgb(102, 150, 200);\n"
"    border: 0px solid;\n"
"    border-radius: 15px;\n"
"}\n"
"\n"
"QPushButton:hover#loginButton{\n"
"    background-color: rgb(113, 167, 221)\n"
"}")
        self.loginButton.setObjectName("loginButton")
        self.stackedWidget.addWidget(self.loginPage)
        self.registerPage = QtWidgets.QWidget()
        self.registerPage.setObjectName("registerPage")
        self.stackedWidget.addWidget(self.registerPage)
        self.mainPage = QtWidgets.QWidget()
        self.mainPage.setMinimumSize(QtCore.QSize(900, 550))
        self.mainPage.setObjectName("mainPage")
        self.main_TopFframe = QtWidgets.QFrame(self.mainPage)
        self.main_TopFframe.setGeometry(QtCore.QRect(0, 0, 951, 51))
        self.main_TopFframe.setMinimumSize(QtCore.QSize(951, 51))
        self.main_TopFframe.setStyleSheet("background-color: rgb(102, 150, 200);")
        self.main_TopFframe.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.main_TopFframe.setFrameShadow(QtWidgets.QFrame.Raised)
        self.main_TopFframe.setObjectName("main_TopFframe")
        self.label = QtWidgets.QLabel(self.main_TopFframe)
        self.label.setGeometry(QtCore.QRect(20, 17, 91, 19))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("color: rgb(255, 255, 255)")
        self.label.setObjectName("label")
        self.main_BottomFrame = QtWidgets.QFrame(self.mainPage)
        self.main_BottomFrame.setGeometry(QtCore.QRect(0, 50, 950, 501))
        self.main_BottomFrame.setMinimumSize(QtCore.QSize(950, 501))
        self.main_BottomFrame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.main_BottomFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.main_BottomFrame.setObjectName("main_BottomFrame")
        self.main_MenuFrame = QtWidgets.QFrame(self.main_BottomFrame)
        self.main_MenuFrame.setGeometry(QtCore.QRect(0, 0, 181, 561))
        self.main_MenuFrame.setMinimumSize(QtCore.QSize(181, 561))
        self.main_MenuFrame.setStyleSheet("background-color: rgb(247, 247, 247);")
        self.main_MenuFrame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.main_MenuFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.main_MenuFrame.setObjectName("main_MenuFrame")
        self.main_MenuButtonsFrame = QtWidgets.QFrame(self.main_MenuFrame)
        self.main_MenuButtonsFrame.setGeometry(QtCore.QRect(0, 60, 201, 441))
        self.main_MenuButtonsFrame.setMinimumSize(QtCore.QSize(181, 441))
        self.main_MenuButtonsFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.main_MenuButtonsFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.main_MenuButtonsFrame.setObjectName("main_MenuButtonsFrame")
        self.dashboardButton = QtWidgets.QPushButton(self.main_MenuButtonsFrame)
        self.dashboardButton.setGeometry(QtCore.QRect(0, 0, 181, 51))
        self.dashboardButton.setMinimumSize(QtCore.QSize(181, 0))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        self.dashboardButton.setFont(font)
        self.dashboardButton.setStyleSheet("QPushButton#dashboardButton{\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: rgb(117, 117, 117);\n"
"    border: 0px solid;\n"
"}\n"
"\n"
"QPushButton:hover#dashboardButton{\n"
"    background-color: rgb(113, 167, 221)\n"
"}")
        self.dashboardButton.setObjectName("dashboardButton")
        self.transactionsButton = QtWidgets.QPushButton(self.main_MenuButtonsFrame)
        self.transactionsButton.setGeometry(QtCore.QRect(0, 50, 181, 51))
        self.transactionsButton.setMinimumSize(QtCore.QSize(181, 0))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        self.transactionsButton.setFont(font)
        self.transactionsButton.setStyleSheet("QPushButton#transactionsButton{\n"
"    color: rgb(117, 117, 117);\n"
"    background-color: rgb(247, 247, 247);\n"
"    border: 0px solid;\n"
"}\n"
"\n"
"QPushButton:hover#transactionsButton{\n"
"    background-color: rgb(113, 167, 221)\n"
"}")
        self.transactionsButton.setObjectName("transactionsButton")
        self.main_MenuBurgerFrame = QtWidgets.QFrame(self.main_MenuFrame)
        self.main_MenuBurgerFrame.setGeometry(QtCore.QRect(0, 0, 181, 61))
        self.main_MenuBurgerFrame.setMinimumSize(QtCore.QSize(181, 61))
        self.main_MenuBurgerFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.main_MenuBurgerFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.main_MenuBurgerFrame.setObjectName("main_MenuBurgerFrame")
        self.sideMenuLabel = QtWidgets.QLabel(self.main_MenuBurgerFrame)
        self.sideMenuLabel.setGeometry(QtCore.QRect(20, 30, 68, 19))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.sideMenuLabel.setFont(font)
        self.sideMenuLabel.setStyleSheet("color: rgb(117, 117, 117)")
        self.sideMenuLabel.setObjectName("sideMenuLabel")
        self.main_ContenFrame = QtWidgets.QFrame(self.main_BottomFrame)
        self.main_ContenFrame.setGeometry(QtCore.QRect(180, 0, 771, 501))
        self.main_ContenFrame.setMinimumSize(QtCore.QSize(771, 501))
        self.main_ContenFrame.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.main_ContenFrame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.main_ContenFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.main_ContenFrame.setObjectName("main_ContenFrame")
        self.mainScreens = QtWidgets.QStackedWidget(self.main_ContenFrame)
        self.mainScreens.setGeometry(QtCore.QRect(0, 0, 771, 501))
        self.mainScreens.setMinimumSize(QtCore.QSize(771, 501))
        self.mainScreens.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.mainScreens.setObjectName("mainScreens")
        self.dashboardScreen = QtWidgets.QWidget()
        self.dashboardScreen.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.dashboardScreen.setObjectName("dashboardScreen")
        self.frame = QtWidgets.QFrame(self.dashboardScreen)
        self.frame.setGeometry(QtCore.QRect(0, 0, 771, 501))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.dashboardLabel = QtWidgets.QLabel(self.frame)
        self.dashboardLabel.setGeometry(QtCore.QRect(40, 20, 121, 21))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.dashboardLabel.setFont(font)
        self.dashboardLabel.setStyleSheet("color: rgb(117, 117, 117)")
        self.dashboardLabel.setObjectName("dashboardLabel")
        self.totalSalesFrame = QtWidgets.QFrame(self.frame)
        self.totalSalesFrame.setGeometry(QtCore.QRect(40, 70, 191, 111))
        self.totalSalesFrame.setStyleSheet("background-color: rgb(235, 152, 78);")
        self.totalSalesFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.totalSalesFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.totalSalesFrame.setObjectName("totalSalesFrame")
        self.totalSalesLabel2 = QtWidgets.QLabel(self.totalSalesFrame)
        self.totalSalesLabel2.setGeometry(QtCore.QRect(20, 70, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.totalSalesLabel2.setFont(font)
        self.totalSalesLabel2.setStyleSheet("color: rgb(255, 255, 255)")
        self.totalSalesLabel2.setObjectName("totalSalesLabel2")
        self.totalSalesLabel = QtWidgets.QLabel(self.totalSalesFrame)
        self.totalSalesLabel.setGeometry(QtCore.QRect(20, 20, 141, 41))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(26)
        font.setBold(True)
        font.setWeight(75)
        self.totalSalesLabel.setFont(font)
        self.totalSalesLabel.setStyleSheet("color: rgb(255, 255, 255)")
        self.totalSalesLabel.setObjectName("totalSalesLabel")
        self.totalSalesFrame_2 = QtWidgets.QFrame(self.frame)
        self.totalSalesFrame_2.setGeometry(QtCore.QRect(280, 70, 191, 111))
        self.totalSalesFrame_2.setStyleSheet("background-color: rgb(26, 188, 156)")
        self.totalSalesFrame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.totalSalesFrame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.totalSalesFrame_2.setObjectName("totalSalesFrame_2")
        self.totalSalesLabel2_4 = QtWidgets.QLabel(self.totalSalesFrame_2)
        self.totalSalesLabel2_4.setGeometry(QtCore.QRect(20, 70, 161, 31))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.totalSalesLabel2_4.setFont(font)
        self.totalSalesLabel2_4.setStyleSheet("color: rgb(255, 255, 255)")
        self.totalSalesLabel2_4.setObjectName("totalSalesLabel2_4")
        self.totalSalesLabel_4 = QtWidgets.QLabel(self.totalSalesFrame_2)
        self.totalSalesLabel_4.setGeometry(QtCore.QRect(20, 20, 141, 41))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(26)
        font.setBold(True)
        font.setWeight(75)
        self.totalSalesLabel_4.setFont(font)
        self.totalSalesLabel_4.setStyleSheet("color: rgb(255, 255, 255)")
        self.totalSalesLabel_4.setObjectName("totalSalesLabel_4")
        self.dashboardMonthlySalesLabel = QtWidgets.QLabel(self.frame)
        self.dashboardMonthlySalesLabel.setGeometry(QtCore.QRect(40, 260, 121, 21))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setBold(True)
        font.setWeight(75)
        self.dashboardMonthlySalesLabel.setFont(font)
        self.dashboardMonthlySalesLabel.setStyleSheet("color: rgb(117, 117, 117)")
        self.dashboardMonthlySalesLabel.setObjectName("dashboardMonthlySalesLabel")
        self.salesMonth1Label = QtWidgets.QLabel(self.frame)
        self.salesMonth1Label.setGeometry(QtCore.QRect(40, 340, 121, 21))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setBold(True)
        font.setWeight(75)
        self.salesMonth1Label.setFont(font)
        self.salesMonth1Label.setStyleSheet("color: rgb(117, 117, 117)")
        self.salesMonth1Label.setObjectName("salesMonth1Label")
        self.salesMonth2Label = QtWidgets.QLabel(self.frame)
        self.salesMonth2Label.setGeometry(QtCore.QRect(40, 370, 121, 21))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setBold(True)
        font.setWeight(75)
        self.salesMonth2Label.setFont(font)
        self.salesMonth2Label.setStyleSheet("color: rgb(117, 117, 117)")
        self.salesMonth2Label.setText("")
        self.salesMonth2Label.setObjectName("salesMonth2Label")
        self.salesMonth3Label = QtWidgets.QLabel(self.frame)
        self.salesMonth3Label.setGeometry(QtCore.QRect(40, 400, 121, 21))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setBold(True)
        font.setWeight(75)
        self.salesMonth3Label.setFont(font)
        self.salesMonth3Label.setStyleSheet("color: rgb(117, 117, 117)")
        self.salesMonth3Label.setText("")
        self.salesMonth3Label.setObjectName("salesMonth3Label")
        self.dashboardMonthLabel = QtWidgets.QLabel(self.frame)
        self.dashboardMonthLabel.setGeometry(QtCore.QRect(40, 300, 121, 21))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setBold(True)
        font.setWeight(75)
        self.dashboardMonthLabel.setFont(font)
        self.dashboardMonthLabel.setStyleSheet("color: rgb(117, 117, 117)")
        self.dashboardMonthLabel.setObjectName("dashboardMonthLabel")
        self.dashboardSalesLabel = QtWidgets.QLabel(self.frame)
        self.dashboardSalesLabel.setGeometry(QtCore.QRect(350, 300, 121, 21))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setBold(True)
        font.setWeight(75)
        self.dashboardSalesLabel.setFont(font)
        self.dashboardSalesLabel.setStyleSheet("color: rgb(117, 117, 117)")
        self.dashboardSalesLabel.setObjectName("dashboardSalesLabel")
        self.dashboardSales = QtWidgets.QLabel(self.frame)
        self.dashboardSales.setGeometry(QtCore.QRect(320, 340, 121, 21))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setBold(True)
        font.setWeight(75)
        self.dashboardSales.setFont(font)
        self.dashboardSales.setStyleSheet("color: rgb(117, 117, 117)")
        self.dashboardSales.setObjectName("dashboardSales")
        self.dashboardSales2 = QtWidgets.QLabel(self.frame)
        self.dashboardSales2.setGeometry(QtCore.QRect(320, 370, 121, 21))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setBold(True)
        font.setWeight(75)
        self.dashboardSales2.setFont(font)
        self.dashboardSales2.setStyleSheet("color: rgb(117, 117, 117)")
        self.dashboardSales2.setText("")
        self.dashboardSales2.setObjectName("dashboardSales2")
        self.dashboardSales3 = QtWidgets.QLabel(self.frame)
        self.dashboardSales3.setGeometry(QtCore.QRect(320, 400, 121, 21))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setBold(True)
        font.setWeight(75)
        self.dashboardSales3.setFont(font)
        self.dashboardSales3.setStyleSheet("color: rgb(117, 117, 117)")
        self.dashboardSales3.setText("")
        self.dashboardSales3.setObjectName("dashboardSales3")
        self.salesMonth4Label = QtWidgets.QLabel(self.frame)
        self.salesMonth4Label.setGeometry(QtCore.QRect(40, 430, 121, 21))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setBold(True)
        font.setWeight(75)
        self.salesMonth4Label.setFont(font)
        self.salesMonth4Label.setStyleSheet("color: rgb(117, 117, 117)")
        self.salesMonth4Label.setText("")
        self.salesMonth4Label.setObjectName("salesMonth4Label")
        self.dashboardSales4 = QtWidgets.QLabel(self.frame)
        self.dashboardSales4.setGeometry(QtCore.QRect(320, 430, 121, 21))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setBold(True)
        font.setWeight(75)
        self.dashboardSales4.setFont(font)
        self.dashboardSales4.setStyleSheet("color: rgb(117, 117, 117)")
        self.dashboardSales4.setText("")
        self.dashboardSales4.setObjectName("dashboardSales4")
        self.mainScreens.addWidget(self.dashboardScreen)
        self.transactionScreen = QtWidgets.QWidget()
        self.transactionScreen.setObjectName("transactionScreen")
        self.transactionStackedWidget = QtWidgets.QStackedWidget(self.transactionScreen)
        self.transactionStackedWidget.setGeometry(QtCore.QRect(0, 0, 771, 501))
        self.transactionStackedWidget.setObjectName("transactionStackedWidget")
        self.viewTransactions = QtWidgets.QWidget()
        self.viewTransactions.setObjectName("viewTransactions")
        self.addTransactionButtonFrame = QtWidgets.QFrame(self.viewTransactions)
        self.addTransactionButtonFrame.setGeometry(QtCore.QRect(-1, 419, 771, 101))
        self.addTransactionButtonFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.addTransactionButtonFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.addTransactionButtonFrame.setObjectName("addTransactionButtonFrame")
        self.addTransactionButton = QtWidgets.QPushButton(self.addTransactionButtonFrame)
        self.addTransactionButton.setGeometry(QtCore.QRect(270, 20, 171, 41))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        self.addTransactionButton.setFont(font)
        self.addTransactionButton.setStyleSheet("QPushButton#addTransactionButton{\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: rgb(102, 150, 200);\n"
"    border: 0px solid;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover#addTransactionButton{\n"
"    background-color: rgb(113, 167, 221)\n"
"}")
        self.addTransactionButton.setObjectName("addTransactionButton")
        self.transactionContentFrame = QtWidgets.QFrame(self.viewTransactions)
        self.transactionContentFrame.setGeometry(QtCore.QRect(0, 100, 771, 321))
        self.transactionContentFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.transactionContentFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.transactionContentFrame.setObjectName("transactionContentFrame")
        self.tableWidget = QtWidgets.QTableWidget(self.transactionContentFrame)
        self.tableWidget.setGeometry(QtCore.QRect(20, 20, 721, 311))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.tableWidget.setFont(font)
        self.tableWidget.setStyleSheet("tableWidget {\n"
"  padding: 15px;\n"
"  text-align: left;\n"
"}")
        self.tableWidget.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.tableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.tableWidget.setDragEnabled(False)
        self.tableWidget.setShowGrid(False)
        self.tableWidget.setGridStyle(QtCore.Qt.SolidLine)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(6)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(12)
        item.setFont(font)
        item.setBackground(QtGui.QColor(255, 85, 127))
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(12)
        item.setFont(font)
        item.setBackground(QtGui.QColor(102, 150, 200))
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(12)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(12)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(12)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(12)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(5, item)
        self.tableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.tableWidget.horizontalHeader().setSortIndicatorShown(False)
        self.tableWidget.horizontalHeader().setStretchLastSection(False)
        self.tableWidget.verticalHeader().setSortIndicatorShown(False)
        self.tableWidget.verticalHeader().setStretchLastSection(False)
        self.transactionHeaderFrame = QtWidgets.QFrame(self.viewTransactions)
        self.transactionHeaderFrame.setGeometry(QtCore.QRect(0, 0, 771, 101))
        self.transactionHeaderFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.transactionHeaderFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.transactionHeaderFrame.setObjectName("transactionHeaderFrame")
        self.transactionLabel = QtWidgets.QLabel(self.transactionHeaderFrame)
        self.transactionLabel.setGeometry(QtCore.QRect(40, 20, 121, 21))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.transactionLabel.setFont(font)
        self.transactionLabel.setStyleSheet("color: rgb(117, 117, 117)")
        self.transactionLabel.setObjectName("transactionLabel")
        self.sortLabel = QtWidgets.QLabel(self.transactionHeaderFrame)
        self.sortLabel.setGeometry(QtCore.QRect(40, 60, 121, 21))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.sortLabel.setFont(font)
        self.sortLabel.setStyleSheet("color: rgb(117, 117, 117)")
        self.sortLabel.setObjectName("sortLabel")
        self.sortComboBox = QtWidgets.QComboBox(self.transactionHeaderFrame)
        self.sortComboBox.setGeometry(QtCore.QRect(130, 60, 101, 25))
        self.sortComboBox.setObjectName("sortComboBox")
        self.sortComboBox.addItem("")
        self.generateReportButton = QtWidgets.QPushButton(self.transactionHeaderFrame)
        self.generateReportButton.setGeometry(QtCore.QRect(535, 55, 122, 31))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        self.generateReportButton.setIcon(QtGui.QIcon('download_icon.png'))
        self.generateReportButton.setIconSize(QtCore.QSize(10,10))
        self.generateReportButton.setFont(font)
        self.generateReportButton.setStyleSheet("QPushButton#generateReportButton{\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: rgb(255, 123, 79);\n"
"    border: 0px solid;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover#generateReportButton{\n"
"    background-color: rgb(255, 119, 65)\n"
"}")
        self.generateReportButton.setObjectName("generateReportButton")
        self.transactionStackedWidget.addWidget(self.viewTransactions)
        self.addTransactionPage = QtWidgets.QWidget()
        self.addTransactionPage.setObjectName("addTransactionPage")
        self.addTransactionFrame = QtWidgets.QFrame(self.addTransactionPage)
        self.addTransactionFrame.setGeometry(QtCore.QRect(0, 0, 771, 501))
        self.addTransactionFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.addTransactionFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.addTransactionFrame.setObjectName("addTransactionFrame")
        self.addTransactionLabel = QtWidgets.QLabel(self.addTransactionFrame)
        self.addTransactionLabel.setGeometry(QtCore.QRect(300, 40, 151, 21))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setBold(True)
        font.setWeight(75)
        self.addTransactionLabel.setFont(font)
        self.addTransactionLabel.setStyleSheet("color: rgb(117, 117, 117)")
        self.addTransactionLabel.setObjectName("addTransactionLabel")
        self.addProductComboBox = QtWidgets.QComboBox(self.addTransactionFrame)
        self.addProductComboBox.setGeometry(QtCore.QRect(250, 120, 251, 31))
        self.addProductComboBox.setObjectName("addProductComboBox")
        self.addProductComboBox.addItem("")
        self.addProductComboBox.addItem("")
        self.addProductComboBox.addItem("")
        self.addProductComboBox.addItem("")
        self.addProductComboBox.addItem("")
        self.addTransactionProductLabel = QtWidgets.QLabel(self.addTransactionFrame)
        self.addTransactionProductLabel.setGeometry(QtCore.QRect(250, 90, 131, 21))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        self.addTransactionProductLabel.setFont(font)
        self.addTransactionProductLabel.setStyleSheet("color: rgb(117, 117, 117)")
        self.addTransactionProductLabel.setObjectName("addTransactionProductLabel")
        self.addTransactionDescInput = QtWidgets.QLineEdit(self.addTransactionFrame)
        self.addTransactionDescInput.setGeometry(QtCore.QRect(250, 180, 251, 31))
        self.addTransactionDescInput.setObjectName("addTransactionDescInput")
        self.addTransactionCustInput = QtWidgets.QLineEdit(self.addTransactionFrame)
        self.addTransactionCustInput.setGeometry(QtCore.QRect(250, 240, 251, 31))
        self.addTransactionCustInput.setObjectName("addTransactionCustInput")
        self.addTransactionPriceInput = QtWidgets.QLineEdit(self.addTransactionFrame)
        self.addTransactionPriceInput.setGeometry(QtCore.QRect(250, 300, 251, 31))
        self.addTransactionPriceInput.setObjectName("addTransactionPriceInput")
        self.addTransactionQuantity = QtWidgets.QSpinBox(self.addTransactionFrame)
        self.addTransactionQuantity.setGeometry(QtCore.QRect(380, 360, 61, 25))
        self.addTransactionQuantity.setObjectName("addTransactionQuantity")
        self.addTransactionQuantityLabel = QtWidgets.QLabel(self.addTransactionFrame)
        self.addTransactionQuantityLabel.setGeometry(QtCore.QRect(250, 360, 131, 21))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        self.addTransactionQuantityLabel.setFont(font)
        self.addTransactionQuantityLabel.setStyleSheet("color: rgb(117, 117, 117)")
        self.addTransactionQuantityLabel.setObjectName("addTransactionQuantityLabel")
        self.addTransactionSaveButton = QtWidgets.QPushButton(self.addTransactionFrame)
        self.addTransactionSaveButton.setGeometry(QtCore.QRect(250, 420, 111, 41))
        self.addTransactionSaveButton.setStyleSheet("QPushButton#addTransactionSaveButton{\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: rgb(102, 150, 200);\n"
"    border: 0px solid;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover#addTransactionSaveButton{\n"
"    background-color: rgb(113, 167, 221)\n"
"}")
        self.addTransactionSaveButton.setObjectName("addTransactionSaveButton")
        self.addTransactionCancelButton = QtWidgets.QPushButton(self.addTransactionFrame)
        self.addTransactionCancelButton.setGeometry(QtCore.QRect(395, 420, 111, 41))
        self.addTransactionCancelButton.setStyleSheet("QPushButton#addTransactionCancelButton{\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: rgb(255, 123, 79);\n"
"    border: 0px solid;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover#addTransactionCancelButton{\n"
"    background-color: rgb(255, 119, 65);\n"
"}")
        self.addTransactionCancelButton.setObjectName("addTransactionCancelButton")
        self.transactionStackedWidget.addWidget(self.addTransactionPage)
        self.editTransactionPage = QtWidgets.QWidget()
        self.editTransactionPage.setObjectName("editTransactionPage")
        self.editTransactionFrame = QtWidgets.QFrame(self.editTransactionPage)
        self.editTransactionFrame.setGeometry(QtCore.QRect(0, -10, 771, 501))
        self.editTransactionFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.editTransactionFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.editTransactionFrame.setObjectName("editTransactionFrame")
        self.editProductComboBox = QtWidgets.QComboBox(self.editTransactionFrame)
        self.editProductComboBox.setGeometry(QtCore.QRect(240, 120, 251, 31))
        self.editProductComboBox.setObjectName("editProductComboBox")
        self.editProductComboBox.addItem("")
        self.editProductComboBox.addItem("")
        self.editProductComboBox.addItem("")
        self.editProductComboBox.addItem("")
        self.editProductComboBox.addItem("")
        self.editTransactionCustInput = QtWidgets.QLineEdit(self.editTransactionFrame)
        self.editTransactionCustInput.setGeometry(QtCore.QRect(240, 240, 251, 31))
        self.editTransactionCustInput.setObjectName("editTransactionCustInput")
        self.editTransactionQuantity = QtWidgets.QSpinBox(self.editTransactionFrame)
        self.editTransactionQuantity.setGeometry(QtCore.QRect(370, 360, 61, 25))
        self.editTransactionQuantity.setObjectName("editTransactionQuantity")
        self.editTransactionProductLabel = QtWidgets.QLabel(self.editTransactionFrame)
        self.editTransactionProductLabel.setGeometry(QtCore.QRect(240, 90, 131, 21))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        self.editTransactionProductLabel.setFont(font)
        self.editTransactionProductLabel.setStyleSheet("color: rgb(117, 117, 117)")
        self.editTransactionProductLabel.setObjectName("editTransactionProductLabel")
        self.editTransactionDescInput = QtWidgets.QLineEdit(self.editTransactionFrame)
        self.editTransactionDescInput.setGeometry(QtCore.QRect(240, 180, 251, 31))
        self.editTransactionDescInput.setObjectName("editTransactionDescInput")
        self.editTransactionQuantityLabel = QtWidgets.QLabel(self.editTransactionFrame)
        self.editTransactionQuantityLabel.setGeometry(QtCore.QRect(240, 360, 131, 21))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        self.editTransactionQuantityLabel.setFont(font)
        self.editTransactionQuantityLabel.setStyleSheet("color: rgb(117, 117, 117)")
        self.editTransactionQuantityLabel.setObjectName("editTransactionQuantityLabel")
        self.editTransactionPriceInput = QtWidgets.QLineEdit(self.editTransactionFrame)
        self.editTransactionPriceInput.setGeometry(QtCore.QRect(240, 300, 251, 31))
        self.editTransactionPriceInput.setObjectName("editTransactionPriceInput")
        self.editTransactionUpdateButton = QtWidgets.QPushButton(self.editTransactionFrame)
        self.editTransactionUpdateButton.setGeometry(QtCore.QRect(240, 420, 111, 41))
        self.editTransactionUpdateButton.setStyleSheet("QPushButton#editTransactionUpdateButton{\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: rgb(102, 150, 200);\n"
"    border: 0px solid;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover#editTransactionUpdateButton{\n"
"    background-color: rgb(113, 167, 221)\n"
"}")
        self.editTransactionUpdateButton.setObjectName("editTransactionUpdateButton")
        self.editTransactionCancelButton = QtWidgets.QPushButton(self.editTransactionFrame)
        self.editTransactionCancelButton.setGeometry(QtCore.QRect(385, 420, 111, 41))
        self.editTransactionCancelButton.setStyleSheet("QPushButton#editTransactionCancelButton{\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: rgb(255, 123, 79);\n"
"    border: 0px solid;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover#editTransactionCancelButton{\n"
"    background-color: rgb(255, 119, 65);\n"
"}")
        self.editTransactionCancelButton.setObjectName("editTransactionCancelButton")
        self.editTransactionLabel = QtWidgets.QLabel(self.editTransactionFrame)
        self.editTransactionLabel.setGeometry(QtCore.QRect(300, 40, 151, 21))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setBold(True)
        font.setWeight(75)
        self.editTransactionLabel.setFont(font)
        self.editTransactionLabel.setStyleSheet("color: rgb(117, 117, 117)")
        self.editTransactionLabel.setObjectName("editTransactionLabel")
        self.transactionStackedWidget.addWidget(self.editTransactionPage)
        self.mainScreens.addWidget(self.transactionScreen)
        self.stackedWidget.addWidget(self.mainPage)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(0)
        self.mainScreens.setCurrentIndex(0)
        self.transactionStackedWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)






        ########################################
        ########################################
        ########################################
        ########################################
        ########################################
        ########################################
        ########################################
        ####### EDITING THE PYTHON FILE ########

        self.db = mdb.connect('localhost', 'root', '', 'jlneon')
        self.mycursor = self.db.cursor()

        self.user = 0
        self.dashboardClicked = True
        self.sortItems = []
        self.saleInstance = 0

        ####CONNECT TO DATABASE
        DBConnection()

        


        self.passwordField.setEchoMode(QtWidgets.QLineEdit.Password)

        ###NAVIGATION
        self.loginButton.clicked.connect(lambda: self.login())
        self.dashboardButton.clicked.connect(lambda: self.navigateDashboard())
        self.transactionsButton.clicked.connect(lambda: self.retrieveTransactions())
        self.addTransactionButton.clicked.connect(lambda: self.transactionStackedWidget.setCurrentWidget(self.addTransactionPage))
        #self.pushButton_2.clicked.connect(lambda: self.transactionStackedWidget.setCurrentWidget(self.editTransactionPage))
        
        
        self.addTransactionSaveButton.clicked.connect(lambda: self.addSales())
        self.addTransactionCancelButton.clicked.connect(lambda: self.cancelAddSales())
        self.editTransactionCancelButton.clicked.connect(lambda: self.transactionStackedWidget.setCurrentWidget(self.viewTransactions))
        self.generateReportButton.clicked.connect(lambda: self.generateReport())

        

        #####STYLE#####
        #TABLE
        style = "::section {""background-color: rgb(102, 150, 200); color: white; border: none; padding-left: 5px; padding-right: 5px; padding-top: 5px;}"
        self.tableWidget.horizontalHeader().setStyleSheet(style)
        self.tableWidget.horizontalHeader().setDefaultAlignment(QtCore.Qt.AlignLeft)
        self.tableWidget.setColumnWidth(0, 50)
        self.tableWidget.setColumnWidth(1, 160)
        self.tableWidget.setColumnWidth(2, 160)
        self.tableWidget.setColumnWidth(3, 100)
        self.tableWidget.setColumnWidth(4, 70)
        self.tableWidget.setColumnWidth(5, 78)

        #COMBOBOX
        #self.sortComboBox.setStyleSheet("border: none")

        #BUTTON
        self.transactionsButton.setFocusPolicy(QtCore.Qt.NoFocus)
        self.loginButton.setFocusPolicy(QtCore.Qt.NoFocus)

    #LOGIN 
    def login(self):
        try:
             username = self.usernameField.text()
             password = self.passwordField.text()


             query = "SELECT userID,username, password FROM tbluser WHERE username LIKE '"+username+"' AND password LIKE '"+password+"'"
             self.mycursor.execute(query)
             result = self.mycursor.fetchone()

             if result == None:
                msg = QtWidgets.QMessageBox()
                msg.setWindowTitle("Login Error")
                msg.setText("Error logging in")
                msg.setIcon(QtWidgets.QMessageBox.Warning)
                x = msg.exec_()

             else:
                self.user = result[0]
                self.stackedWidget.setCurrentWidget(self.mainPage)
                self.navigateDashboard()
        
        except mdb.Error as e:
             print("Error")




    def navigateDashboard(self):
        self.mainScreens.setCurrentWidget(self.dashboardScreen)
        if self.dashboardClicked == True:
             self.dashboardButton.setStyleSheet("color: rgb(255, 255, 255); background-color: rgb(117, 117, 117); border: 0px solid;")
             self.transactionsButton.setStyleSheet("color: rgb(117, 117, 117); background-color: rgb(247, 247, 247); border: 0px solid;")
        self.getTotalSalesDB()
        self.getSalesNumber()



    #RETRIEVE TRANSACTION
    def retrieveTransactions(self):
        try:
            self.getDatesDB()
            self.mainScreens.setCurrentWidget(self.transactionScreen)
            if self.dashboardClicked == True:
                 self.dashboardButton.setStyleSheet("color: rgb(117, 117, 117); background-color: rgb(247, 247, 247); border: 0px solid;")
                 self.transactionsButton.setStyleSheet("color: rgb(255, 255, 255); background-color: rgb(117, 117, 117); border: 0px solid;")
            AllItems = [self.sortComboBox.itemText(i) for i in range(self.sortComboBox.count())]
            for item in self.sortItems:
                if item in AllItems:                                                                                   
                     continue
                self.sortComboBox.addItem(item)
            
            self.sortComboBox.currentIndexChanged.connect(self.sortClicked)

            query = "SELECT * FROM tblsales"
            self.mycursor.execute(query)    

            row = 0
            rowCount = self.mycursor.rowcount
            self.tableWidget.setRowCount(rowCount)
            for data in self.mycursor:
                self.tableWidget.setItem(row, 0, QtWidgets.QTableWidgetItem(str(data[0])))
                self.tableWidget.setItem(row, 1, QtWidgets.QTableWidgetItem(data[2]))
                self.tableWidget.setItem(row, 2, QtWidgets.QTableWidgetItem(data[4]))
                self.tableWidget.setItem(row, 3, QtWidgets.QTableWidgetItem(str(data[6] * data[5])))
                self.btn_sell = QtWidgets.QPushButton('')
                self.btn_sell.setIcon(QtGui.QIcon('edit_icon.png'))
                self.btn_sell.setStyleSheet("border: none")
                self.btn_sell.setIconSize(QtCore.QSize(20,20))
                self.btn_sell.clicked.connect(lambda: self.editHandleButtonClicked())
                self.tableWidget.setCellWidget(row,4,self.btn_sell)
                self.btn_remove = QtWidgets.QPushButton('')
                self.btn_remove.setIcon(QtGui.QIcon('remove_icon.png'))
                self.btn_remove.setStyleSheet("border: none")
                self.btn_remove.setIconSize(QtCore.QSize(20,20))
                self.btn_remove.clicked.connect(lambda: self.removeHandleButtonClicked())
                self.tableWidget.setCellWidget(row,5,self.btn_remove)            
                row = row+1
            
            
        #self.tableWidget.setColumnHidden(0, true)    
        except Exception:
             print("Error retrieving data")



    def sortClicked(self):
        if self.sortComboBox.currentText() == "January":
            query = "SELECT * FROM tblsales"
            self.mycursor.execute(query)
        else:
            query = "SELECT tblsales.salesID, tblsales.transactionID, tblsales.product, tblsales.description, tblsales.customer_name, tblsales.quantity, tblsales.unitPrice FROM tblsales INNER JOIN tbltransaction ON tblsales.transactionID = tbltransaction.transactionID WHERE tbltransaction.date ='"+self.sortComboBox.currentText()+"'"
            self.mycursor.execute(query)    

        row = 0
        rowCount = self.mycursor.rowcount
        self.tableWidget.setRowCount(rowCount)
        for data in self.mycursor:
                self.tableWidget.setItem(row, 0, QtWidgets.QTableWidgetItem(str(data[0])))
                self.tableWidget.setItem(row, 1, QtWidgets.QTableWidgetItem(data[2]))
                self.tableWidget.setItem(row, 2, QtWidgets.QTableWidgetItem(data[4]))
                self.tableWidget.setItem(row, 3, QtWidgets.QTableWidgetItem(str(data[6] * data[5])))
                self.btn_sell = QtWidgets.QPushButton('')
                self.btn_sell.setIcon(QtGui.QIcon('edit_icon.png'))
                self.btn_sell.setStyleSheet("border: none")
                self.btn_sell.setIconSize(QtCore.QSize(20,20))
                self.btn_sell.clicked.connect(lambda: self.editHandleButtonClicked())
                self.tableWidget.setCellWidget(row,4,self.btn_sell)
                self.btn_remove = QtWidgets.QPushButton('')
                self.btn_remove.setIcon(QtGui.QIcon('remove_icon.png'))
                self.btn_remove.setStyleSheet("border: none")
                self.btn_remove.setIconSize(QtCore.QSize(20,20))
                self.btn_remove.clicked.connect(lambda: self.removeHandleButtonClicked())
                self.tableWidget.setCellWidget(row,5,self.btn_remove)            
                row = row+1
        
        #self.tableWidget.setColumnHidden(0, true)



    def editHandleButtonClicked(self):
        button = QtWidgets.qApp.focusWidget()
        # or button = self.sender()
        index = self.tableWidget.indexAt(button.pos())
        if index.isValid():
            print(index.row(), index.column())
            print(self.tableWidget.item(index.row(), 0).text())
            self.transactionStackedWidget.setCurrentWidget(self.editTransactionPage)    
            self.getDataEditDB(self.tableWidget.item(index.row(), 0).text())
            self.editTransactionUpdateButton.clicked.connect(lambda: self.editDB(self.tableWidget.item(index.row(), 0).text()))


    def removeHandleButtonClicked(self):
        button = QtWidgets.qApp.focusWidget()
        # or button = self.sender()
        index = self.tableWidget.indexAt(button.pos())
        if index.isValid():
            print(index.row(), index.column())
            query = "SELECT transactionID FROM tblsales WHERE salesID = '"+self.tableWidget.item(index.row(), 0).text()+"'"
            self.mycursor.execute(query)
            result = self.mycursor.fetchone()
            self.removeTransactionDB(result[0])
            self.removeDB(self.tableWidget.item(index.row(), 0).text())
            



     ##################################
     #QUERIES
     ##################################  

    def removeDB(self, id):
        try:
             query = "DELETE FROM tblsales WHERE salesID = '"+id+"'"
             self.mycursor.execute(query)
             self.db.commit()
             self.retrieveTransactions()

        except mdb.Error as e:
             print("Error")



    def removeTransactionDB(self, transactionID):
        try:
             query = "SELECT COUNT(transactionID) FROM tblsales WHERE transactionID = '"+str(transactionID)+"'"
             self.mycursor.execute(query)
             result = self.mycursor.fetchone()   
                
             if result[0] == 1:
                  self.removeTransactionInstanceDB(transactionID)

        except mdb.Error as e:
             print("Error")




    def removeTransactionInstanceDB(self, id):
        try:
             query = "DELETE FROM tbltransaction WHERE transactionID = '"+str(id)+"'"
             self.mycursor.execute(query)
             self.db.commit()

        except mdb.Error as e:
             print("Error")




    def editDB(self, id):
        try:
             product = self.editProductComboBox.currentText()
             description = self.editTransactionDescInput.text()
             customer = self.editTransactionCustInput.text()
             price = self.editTransactionPriceInput.text()
             quantity = self.editTransactionQuantity.value()

             query = "UPDATE tblsales SET product = %s, description = %s, customer_name = %s, quantity = %s, unitPrice = %s WHERE salesID = %s"
             values = (product, description, customer, quantity, price, id)

             self.mycursor.execute(query, values)
             self.db.commit()
             print("successfuly updated data")
             self.transactionStackedWidget.setCurrentWidget(self.viewTransactions)
             self.retrieveTransactions()

        except mdb.Error as e:
             print("Error")

    

    def getDataEditDB(self, id):
        try:
             query = "SELECT * FROM tblsales WHERE salesID = '"+id+"'"
             self.mycursor.execute(query)
             result = self.mycursor.fetchone()

             self.editProductComboBox.setCurrentText(result[2])
             self.editTransactionDescInput.setText(result[3])
             self.editTransactionCustInput.setText(result[4])
             self.editTransactionPriceInput.setText(str(result[6]))
             self.editTransactionQuantity.setValue(result[5])

        except mdb.Error as e:
             print("Error")

    



    def getDatesDB(self):
          query = "SELECT DISTINCT(date) FROM tbltransaction"
          self.mycursor.execute(query)
          
          for date in self.mycursor:
               self.sortItems.append(date[0])



    def getTotalSalesDB(self):
          query = "SELECT SUM(quantity*unitPrice) FROM tblsales"
          self.mycursor.execute(query)
          result = self.mycursor.fetchone()
          
          if result[0] is None:
               self.totalSalesLabel.setText("0")
          else:
               self.totalSalesLabel.setText(str(result[0]))

    
    def getSalesNumber(self):
          query = "SELECT COUNT(*) FROM tblsales"
          self.mycursor.execute(query)
          result = self.mycursor.fetchone()
          
          if result[0] is None:
               self.totalSalesLabel_4.setText("0")
          else:
               self.totalSalesLabel_4.setText(str(result[0]))

    def getTransactionID(self):
        try:
            query = "SELECT MAX(transactionID) FROM tbltransaction"
            self.mycursor.execute(query)
            result = self.mycursor.fetchone()
            
            if result[0] is None:
                return 0

            return int(result[0])


        except mdb.Error as e:
             print("Error")




    ##ADD SALES TO DATABASE
    def addSales(self):
        try:
             transactionID = self.getTransactionID()
             product = self.addProductComboBox.currentText()
             description = self.addTransactionDescInput.text()
             customer = self.addTransactionCustInput.text()
             price = self.addTransactionPriceInput.text()
             quantity = self.addTransactionQuantity.value()
             
             if self.saleInstance == 0:
                  transactionID = transactionID + 1

             query = "INSERT INTO tblsales(transactionID, product, description, customer_name, quantity, unitPrice) VALUES (%s,%s,%s,%s,%s,%s)"
             values = (transactionID, product, description, customer, quantity, price)        
             
             self.mycursor.execute(query, values)
             self.db.commit()
             
             msg = QtWidgets.QMessageBox()
             msg.setWindowTitle("Add Sales")
             msg.setText("Sales Saved")
             msg.setIcon(QtWidgets.QMessageBox.Information)
             x = msg.exec_()

             if self.saleInstance == 0:
                  self.addTransaction()

             self.saleInstance = self.saleInstance + 1

        except mdb.Error as e:
             print("Error")



    def cancelAddSales(self):
        self.saleInstance = 0
        self.transactionStackedWidget.setCurrentWidget(self.viewTransactions)
        self.retrieveTransactions()

    



        
    #ADD TRANSACTION TO DATABASE  
    def addTransaction(self):
        try: 
             current_time = datetime.date.today().strftime("%b-%d-%Y")  
             query = "INSERT INTO tbltransaction(userID, date) VALUES (%s,%s)"
             values = (self.user, current_time)        
             
             self.mycursor.execute(query, values)
             self.db.commit()
             print("added to transaction")

        except mdb.Error as e:
             print("Error")



    def generateReport(self):
        filename = "report.pdf"
        model = self.tableWidget.model()
        columnCount = model.columnCount()-2

        printer = QtPrintSupport.QPrinter(QtPrintSupport.QPrinter.PrinterResolution)
        printer.setOutputFormat(QtPrintSupport.QPrinter.PdfFormat)
        printer.setPaperSize(QtPrintSupport.QPrinter.A4)
        printer.setOrientation(QtPrintSupport.QPrinter.Landscape)
        printer.setOutputFileName(filename)

        doc = QtGui.QTextDocument()

        html = """<html>
                <head>
                <style>
                table{
                }
                table, th, td {
                border: 1px solid black;
                border-collapse: collapse;
                padding: 5px;
                }
                </style>
                </head>"""
        html += "<table><thead>"
        html += "<tr>"
        for c in range(columnCount):
             html += "<th>{}</th>".format(model.headerData(c, QtCore.Qt.Horizontal))

        html += "</tr></thead>"
        html += "<tbody>"
        for r in range(model.rowCount()):
             html += "<tr>"
             for c in range(columnCount):
                  html += "<td>{}</td>".format(model.index(r, c).data() or "")
             html += "</tr>"
        html += "</tbody></table>"
        doc.setHtml(html)
        doc.setPageSize(QtCore.QSizeF(printer.pageRect().size()))
        doc.print_(printer)
        msg = QtWidgets.QMessageBox()
        msg.setWindowTitle("Report")
        msg.setText("Report Saved")
        msg.setIcon(QtWidgets.QMessageBox.Information)
        x = msg.exec_()



    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "JLNeon"))
        self.loginIntroLabel1.setText(_translate("MainWindow", "         JL Neon"))
        self.loginIntroLabel2.setText(_translate("MainWindow", "Sales Automation"))
        self.loginIntroLabel3.setText(_translate("MainWindow", "Login to manage transactions "))
        self.loginIntroLabel4.setText(_translate("MainWindow", "efficiently"))
        self.usernameField.setPlaceholderText(_translate("MainWindow", " Username"))
        self.passwordField.setPlaceholderText(_translate("MainWindow", " Password"))
        self.usernameLabel.setText(_translate("MainWindow", "USERNAME"))
        self.passwordLabel.setText(_translate("MainWindow", "PASSWORD"))
        self.loginButton.setText(_translate("MainWindow", "SIGN IN"))
        self.label.setText(_translate("MainWindow", "JLNeon"))
        self.dashboardButton.setText(_translate("MainWindow", "Dashboard"))
        self.transactionsButton.setText(_translate("MainWindow", "Sales"))
        self.sideMenuLabel.setText(_translate("MainWindow", "Menu"))
        self.dashboardLabel.setText(_translate("MainWindow", "Dashboard"))
        self.totalSalesLabel2.setText(_translate("MainWindow", "Total Sales"))
        self.totalSalesLabel.setText(_translate("MainWindow", "0"))
        self.totalSalesLabel2_4.setText(_translate("MainWindow", "Number of Sales"))
        self.totalSalesLabel_4.setText(_translate("MainWindow", "3"))
        self.dashboardMonthlySalesLabel.setText(_translate("MainWindow", "Monthly Sales"))
        self.salesMonth1Label.setText(_translate("MainWindow", "Monthly Sales"))
        self.dashboardMonthLabel.setText(_translate("MainWindow", "Month"))
        self.dashboardSalesLabel.setText(_translate("MainWindow", "Sales"))
        self.dashboardSales.setText(_translate("MainWindow", "Monthly Sales"))
        self.addTransactionButton.setText(_translate("MainWindow", "Add Transaction"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "ID"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Product"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Customer"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Amount"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "   Edit"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Remove"))
        self.transactionLabel.setText(_translate("MainWindow", "Sales"))
        self.sortLabel.setText(_translate("MainWindow", "Sort date"))
        self.sortComboBox.setItemText(0, _translate("MainWindow", "January"))
        self.generateReportButton.setText(_translate("MainWindow", " Generate Report"))
        self.addTransactionLabel.setText(_translate("MainWindow", "Add Transaction"))
        self.addProductComboBox.setCurrentText(_translate("MainWindow", "Tarpaulin Printing"))
        self.addProductComboBox.setItemText(0, _translate("MainWindow", "Tarpaulin Printing"))
        self.addProductComboBox.setItemText(1, _translate("MainWindow", "Sticker"))
        self.addProductComboBox.setItemText(2, _translate("MainWindow", "Shirt Printing"))
        self.addProductComboBox.setItemText(3, _translate("MainWindow", "Mug Printing"))
        self.addProductComboBox.setItemText(4, _translate("MainWindow", "ID Printing"))
        self.addTransactionProductLabel.setText(_translate("MainWindow", "Product"))
        self.addTransactionDescInput.setPlaceholderText(_translate("MainWindow", " Description"))
        self.addTransactionCustInput.setPlaceholderText(_translate("MainWindow", " Customer"))
        self.addTransactionPriceInput.setPlaceholderText(_translate("MainWindow", " Unit Price"))
        self.addTransactionQuantityLabel.setText(_translate("MainWindow", "Quantity"))
        self.addTransactionSaveButton.setText(_translate("MainWindow", "Save"))
        self.addTransactionCancelButton.setText(_translate("MainWindow", "Cancel"))
        self.editProductComboBox.setCurrentText(_translate("MainWindow", "Tarpaulin Printing"))
        self.editProductComboBox.setItemText(0, _translate("MainWindow", "Tarpaulin Printing"))
        self.editProductComboBox.setItemText(1, _translate("MainWindow", "Sticker"))
        self.editProductComboBox.setItemText(2, _translate("MainWindow", "Shirt Printing"))
        self.editProductComboBox.setItemText(3, _translate("MainWindow", "Mug Printing"))
        self.editProductComboBox.setItemText(4, _translate("MainWindow", "ID Printing"))
        self.editTransactionCustInput.setPlaceholderText(_translate("MainWindow", " Customer"))
        self.editTransactionProductLabel.setText(_translate("MainWindow", "Product"))
        self.editTransactionDescInput.setPlaceholderText(_translate("MainWindow", " Description"))
        self.editTransactionQuantityLabel.setText(_translate("MainWindow", "Quantity"))
        self.editTransactionPriceInput.setPlaceholderText(_translate("MainWindow", " Unit Price"))
        self.editTransactionUpdateButton.setText(_translate("MainWindow", "Update"))
        self.editTransactionCancelButton.setText(_translate("MainWindow", "Cancel"))
        self.editTransactionLabel.setText(_translate("MainWindow", "Edit Transaction"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
